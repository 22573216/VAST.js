

Main Functions
==============

VON:    peer connectivity, neighbor discovery within peer's AOI
        - find gateway and join network
        - position movement
        - update from neighbors
        
        assumes: 
        - vast_net (send/recv)
        
        implemented by:
        - VON_peer
        
        functions:
          join(addr, aoi, done_CB)            join a VON network with a given gateway (entry) 
          leave()                             leave the VON network
          move(aoi, send_time)                move the AOI to a new position (or change radius)
          list()                              get a list of AOI neighbors    
          send(id, msg)                       send a message to a given node
          put(obj)                            store a app-specific data along with the node (will pass during node discovery)                      
          get()                               retrieve app-specific data for this node
        
SPS:    pub/sub record keeping, pub/sub matching, request passing
        - pub/sub request
        - sub record storage
        - pub request passing to neighbors
        - pub/sub matching
        - delivery of messages
        
        assumes:
        - vast_net (send/recv)
        - region
        - neighboring region
        
        implemented by:
        - VAST_matcher
        - VAST
        
        functions:
          join(GW_addr, world_id)             join the VAST network given a gateway and world 
          leave()                             leave the VAST network
          subscribe(layer, area, sub_CB)      subscribe for an area at a given layer
          publish(layer, area, msg)           publish a message to an area at a given layer
          move(subID, area)                   move a subscription to a new position
          send(id, msg)                       send a message to specified user(s)
          list(area, neighbor_CB)             get a list of subscribers within an area
          
          subscribeNeighbors(notify_CB)       subscribe for subscribers in/out notifications
          
VSO:    region resizing, pub/sub record migration, fault-tolerance (?)
        - load detection
        - overload handling (resize)
        - overload handling (join)
        - underload handling (resize)
        - underload handling (leave)
        - load migration (ensure consistency & fault-tolerance)
        
VCAST:  request forwarding


Dependencies 
============
VSO -> VON
VCAST -> VON/VSO
SPS -> VON/VSO/VCAST


Modular Work Division
=====================
VASTMatcher:
  support for pub/sub matching should exist at VASTMatcher
  it deals with pub/sub record keeping & matching
  VASTMatcher can be implemented with either VON or VSO,
  the latter will provide dynamic load balancing among matchers.
  if only the former is used, then only static partitioning is available.

  basic matcher functions:
  * accept subscribe request (from VASTClient)
  * accept publish request (from VASTClient)
  * forward publish request to neighbors
  * deliver publications to relevant subscribers within own region
  * list currently known subscribers
  * join a VON network and maintain topology with neighbors


VASTRelay:
  support physical coordniate identification and connection to closest Relay

VASTClient:
  basic client functions to forward all requests to current "owner matcher"
  and get all responses from "owner matcher" (possibly via Relay)


